resource "scm_tag" "example_tag" {
  folder = "All"
  name   = "pbf-rule-tag-ds-test-1"
  color  = "Red"
}

# --- PBF Rule Resource with discard action---
resource "scm_pbf_rule" "example_pbf_rule" {
  # Required fields
  name   = "pbf-test-ds-rule-discard"
  folder = "All"

  # Optional: Description of the rule
  description = "Data Source testing pbf rule."

  # The source and destination criteria
  # Assuming 'any' for all except where a value is specified.
  from = {
    zone = ["zone-untrust"] # Traffic coming from the 'zone-untrust' zone
  }
  source      = ["any"]          # Source addresses
  destination = ["any"]          # Destination addresses
  application = ["any"]          # Applications
  service     = ["service-http"] # Services (ports/protocols)
  source_user = ["any"]


  # Define the action for the PBF rule
  action = {
    discard = {}
  }

  # Apply the created tag
  tag = [
    scm_tag.example_tag.name
  ]

  # Optional: Enforce Symmetric Return
  enforce_symmetric_return = {
    enabled = false
    # nexthop_address_list is optional here, leave it out for a simpler example
  }

  schedule = "non-work-hours"
}

# Define the data source (the item to be retrieved via API GET)
data "scm_pbf_rule" "pbf_external_web_test_get" {
  # The data source needs the unique ID generated by the resource creation
  id = scm_pbf_rule.example_pbf_rule.id

}

# --- Output Blocks to Print Retrieved Data ---

output "retrieved_ID_and_name" {
  description = "The UUID and name of the retrieved PBF rule."
  value = {
    # CORRECTED: Use the data source name 'pbf_external_web_test_get'
    id   = data.scm_pbf_rule.pbf_external_web_test_get.id
    name = data.scm_pbf_rule.pbf_external_web_test_get.name
  }
}

output "recieved_response" {
  description = "The full response object."
  value       = data.scm_pbf_rule.pbf_external_web_test_get
}