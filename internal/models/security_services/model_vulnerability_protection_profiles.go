package models

import (
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/objectvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	dsschema "github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// Package: security_services
// This file contains models for the security_services SDK package

// VulnerabilityProtectionProfiles represents the Terraform model for VulnerabilityProtectionProfiles
type VulnerabilityProtectionProfiles struct {
	Tfid            types.String          `tfsdk:"tfid"`
	Description     basetypes.StringValue `tfsdk:"description"`
	Device          basetypes.StringValue `tfsdk:"device"`
	Folder          basetypes.StringValue `tfsdk:"folder"`
	Id              basetypes.StringValue `tfsdk:"id"`
	Name            basetypes.StringValue `tfsdk:"name"`
	Rules           basetypes.ListValue   `tfsdk:"rules"`
	Snippet         basetypes.StringValue `tfsdk:"snippet"`
	ThreatException basetypes.ListValue   `tfsdk:"threat_exception"`
}

// VulnerabilityProtectionProfilesRulesInner represents a nested structure within the VulnerabilityProtectionProfiles model
type VulnerabilityProtectionProfilesRulesInner struct {
	Action        basetypes.ObjectValue `tfsdk:"action"`
	Category      basetypes.StringValue `tfsdk:"category"`
	Cve           basetypes.ListValue   `tfsdk:"cve"`
	Host          basetypes.StringValue `tfsdk:"host"`
	Name          basetypes.StringValue `tfsdk:"name"`
	PacketCapture basetypes.StringValue `tfsdk:"packet_capture"`
	Severity      basetypes.ListValue   `tfsdk:"severity"`
	ThreatName    basetypes.StringValue `tfsdk:"threat_name"`
	VendorId      basetypes.ListValue   `tfsdk:"vendor_id"`
}

// VulnerabilityProtectionProfilesRulesInnerAction represents a nested structure within the VulnerabilityProtectionProfiles model
type VulnerabilityProtectionProfilesRulesInnerAction struct {
	Alert       basetypes.ObjectValue `tfsdk:"alert"`
	Allow       basetypes.ObjectValue `tfsdk:"allow"`
	BlockIp     basetypes.ObjectValue `tfsdk:"block_ip"`
	Default     basetypes.ObjectValue `tfsdk:"default"`
	Drop        basetypes.ObjectValue `tfsdk:"drop"`
	ResetBoth   basetypes.ObjectValue `tfsdk:"reset_both"`
	ResetClient basetypes.ObjectValue `tfsdk:"reset_client"`
	ResetServer basetypes.ObjectValue `tfsdk:"reset_server"`
}

// VulnerabilityProtectionProfilesRulesInnerActionBlockIp represents a nested structure within the VulnerabilityProtectionProfiles model
type VulnerabilityProtectionProfilesRulesInnerActionBlockIp struct {
	Duration basetypes.Int64Value  `tfsdk:"duration"`
	TrackBy  basetypes.StringValue `tfsdk:"track_by"`
}

// VulnerabilityProtectionProfilesThreatExceptionInner represents a nested structure within the VulnerabilityProtectionProfiles model
type VulnerabilityProtectionProfilesThreatExceptionInner struct {
	Action        basetypes.ObjectValue `tfsdk:"action"`
	ExemptIp      basetypes.ListValue   `tfsdk:"exempt_ip"`
	Name          basetypes.StringValue `tfsdk:"name"`
	Notes         basetypes.StringValue `tfsdk:"notes"`
	PacketCapture basetypes.StringValue `tfsdk:"packet_capture"`
	TimeAttribute basetypes.ObjectValue `tfsdk:"time_attribute"`
}

// VulnerabilityProtectionProfilesThreatExceptionInnerAction represents a nested structure within the VulnerabilityProtectionProfiles model
type VulnerabilityProtectionProfilesThreatExceptionInnerAction struct {
	Alert       basetypes.ObjectValue `tfsdk:"alert"`
	Allow       basetypes.ObjectValue `tfsdk:"allow"`
	BlockIp     basetypes.ObjectValue `tfsdk:"block_ip"`
	Default     basetypes.ObjectValue `tfsdk:"default"`
	Drop        basetypes.ObjectValue `tfsdk:"drop"`
	ResetBoth   basetypes.ObjectValue `tfsdk:"reset_both"`
	ResetClient basetypes.ObjectValue `tfsdk:"reset_client"`
	ResetServer basetypes.ObjectValue `tfsdk:"reset_server"`
}

// VulnerabilityProtectionProfilesThreatExceptionInnerActionBlockIp represents a nested structure within the VulnerabilityProtectionProfiles model
type VulnerabilityProtectionProfilesThreatExceptionInnerActionBlockIp struct {
	Duration basetypes.Int64Value  `tfsdk:"duration"`
	TrackBy  basetypes.StringValue `tfsdk:"track_by"`
}

// VulnerabilityProtectionProfilesThreatExceptionInnerExemptIpInner represents a nested structure within the VulnerabilityProtectionProfiles model
type VulnerabilityProtectionProfilesThreatExceptionInnerExemptIpInner struct {
	Name basetypes.StringValue `tfsdk:"name"`
}

// VulnerabilityProtectionProfilesThreatExceptionInnerTimeAttribute represents a nested structure within the VulnerabilityProtectionProfiles model
type VulnerabilityProtectionProfilesThreatExceptionInnerTimeAttribute struct {
	Interval  basetypes.Int64Value  `tfsdk:"interval"`
	Threshold basetypes.Int64Value  `tfsdk:"threshold"`
	TrackBy   basetypes.StringValue `tfsdk:"track_by"`
}

// AttrTypes defines the attribute types for the VulnerabilityProtectionProfiles model.
func (o VulnerabilityProtectionProfiles) AttrTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"tfid":        basetypes.StringType{},
		"description": basetypes.StringType{},
		"device":      basetypes.StringType{},
		"folder":      basetypes.StringType{},
		"id":          basetypes.StringType{},
		"name":        basetypes.StringType{},
		"rules": basetypes.ListType{ElemType: basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{
				"action": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{
						"alert": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"allow": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"block_ip": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{
								"duration": basetypes.Int64Type{},
								"track_by": basetypes.StringType{},
							},
						},
						"default": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"drop": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"reset_both": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"reset_client": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"reset_server": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
					},
				},
				"category":       basetypes.StringType{},
				"cve":            basetypes.ListType{ElemType: basetypes.StringType{}},
				"host":           basetypes.StringType{},
				"name":           basetypes.StringType{},
				"packet_capture": basetypes.StringType{},
				"severity":       basetypes.ListType{ElemType: basetypes.StringType{}},
				"threat_name":    basetypes.StringType{},
				"vendor_id":      basetypes.ListType{ElemType: basetypes.StringType{}},
			},
		}},
		"snippet": basetypes.StringType{},
		"threat_exception": basetypes.ListType{ElemType: basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{
				"action": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{
						"alert": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"allow": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"block_ip": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{
								"duration": basetypes.Int64Type{},
								"track_by": basetypes.StringType{},
							},
						},
						"default": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"drop": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"reset_both": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"reset_client": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
						"reset_server": basetypes.ObjectType{
							AttrTypes: map[string]attr.Type{},
						},
					},
				},
				"exempt_ip": basetypes.ListType{ElemType: basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{
						"name": basetypes.StringType{},
					},
				}},
				"name":           basetypes.StringType{},
				"notes":          basetypes.StringType{},
				"packet_capture": basetypes.StringType{},
				"time_attribute": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{
						"interval":  basetypes.Int64Type{},
						"threshold": basetypes.Int64Type{},
						"track_by":  basetypes.StringType{},
					},
				},
			},
		}},
	}
}

// AttrType returns the attribute type for a list of VulnerabilityProtectionProfiles objects.
func (o VulnerabilityProtectionProfiles) AttrType() attr.Type {
	return basetypes.ObjectType{
		AttrTypes: o.AttrTypes(),
	}
}

// AttrTypes defines the attribute types for the VulnerabilityProtectionProfilesRulesInner model.
func (o VulnerabilityProtectionProfilesRulesInner) AttrTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"action": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{
				"alert": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"allow": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"block_ip": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{
						"duration": basetypes.Int64Type{},
						"track_by": basetypes.StringType{},
					},
				},
				"default": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"drop": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"reset_both": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"reset_client": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"reset_server": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
			},
		},
		"category":       basetypes.StringType{},
		"cve":            basetypes.ListType{ElemType: basetypes.StringType{}},
		"host":           basetypes.StringType{},
		"name":           basetypes.StringType{},
		"packet_capture": basetypes.StringType{},
		"severity":       basetypes.ListType{ElemType: basetypes.StringType{}},
		"threat_name":    basetypes.StringType{},
		"vendor_id":      basetypes.ListType{ElemType: basetypes.StringType{}},
	}
}

// AttrType returns the attribute type for a list of VulnerabilityProtectionProfilesRulesInner objects.
func (o VulnerabilityProtectionProfilesRulesInner) AttrType() attr.Type {
	return basetypes.ObjectType{
		AttrTypes: o.AttrTypes(),
	}
}

// AttrTypes defines the attribute types for the VulnerabilityProtectionProfilesRulesInnerAction model.
func (o VulnerabilityProtectionProfilesRulesInnerAction) AttrTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"alert": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"allow": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"block_ip": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{
				"duration": basetypes.Int64Type{},
				"track_by": basetypes.StringType{},
			},
		},
		"default": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"drop": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"reset_both": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"reset_client": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"reset_server": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
	}
}

// AttrType returns the attribute type for a list of VulnerabilityProtectionProfilesRulesInnerAction objects.
func (o VulnerabilityProtectionProfilesRulesInnerAction) AttrType() attr.Type {
	return basetypes.ObjectType{
		AttrTypes: o.AttrTypes(),
	}
}

// AttrTypes defines the attribute types for the VulnerabilityProtectionProfilesRulesInnerActionBlockIp model.
func (o VulnerabilityProtectionProfilesRulesInnerActionBlockIp) AttrTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"duration": basetypes.Int64Type{},
		"track_by": basetypes.StringType{},
	}
}

// AttrType returns the attribute type for a list of VulnerabilityProtectionProfilesRulesInnerActionBlockIp objects.
func (o VulnerabilityProtectionProfilesRulesInnerActionBlockIp) AttrType() attr.Type {
	return basetypes.ObjectType{
		AttrTypes: o.AttrTypes(),
	}
}

// AttrTypes defines the attribute types for the VulnerabilityProtectionProfilesThreatExceptionInner model.
func (o VulnerabilityProtectionProfilesThreatExceptionInner) AttrTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"action": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{
				"alert": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"allow": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"block_ip": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{
						"duration": basetypes.Int64Type{},
						"track_by": basetypes.StringType{},
					},
				},
				"default": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"drop": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"reset_both": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"reset_client": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
				"reset_server": basetypes.ObjectType{
					AttrTypes: map[string]attr.Type{},
				},
			},
		},
		"exempt_ip": basetypes.ListType{ElemType: basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{
				"name": basetypes.StringType{},
			},
		}},
		"name":           basetypes.StringType{},
		"notes":          basetypes.StringType{},
		"packet_capture": basetypes.StringType{},
		"time_attribute": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{
				"interval":  basetypes.Int64Type{},
				"threshold": basetypes.Int64Type{},
				"track_by":  basetypes.StringType{},
			},
		},
	}
}

// AttrType returns the attribute type for a list of VulnerabilityProtectionProfilesThreatExceptionInner objects.
func (o VulnerabilityProtectionProfilesThreatExceptionInner) AttrType() attr.Type {
	return basetypes.ObjectType{
		AttrTypes: o.AttrTypes(),
	}
}

// AttrTypes defines the attribute types for the VulnerabilityProtectionProfilesThreatExceptionInnerAction model.
func (o VulnerabilityProtectionProfilesThreatExceptionInnerAction) AttrTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"alert": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"allow": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"block_ip": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{
				"duration": basetypes.Int64Type{},
				"track_by": basetypes.StringType{},
			},
		},
		"default": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"drop": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"reset_both": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"reset_client": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
		"reset_server": basetypes.ObjectType{
			AttrTypes: map[string]attr.Type{},
		},
	}
}

// AttrType returns the attribute type for a list of VulnerabilityProtectionProfilesThreatExceptionInnerAction objects.
func (o VulnerabilityProtectionProfilesThreatExceptionInnerAction) AttrType() attr.Type {
	return basetypes.ObjectType{
		AttrTypes: o.AttrTypes(),
	}
}

// AttrTypes defines the attribute types for the VulnerabilityProtectionProfilesThreatExceptionInnerActionBlockIp model.
func (o VulnerabilityProtectionProfilesThreatExceptionInnerActionBlockIp) AttrTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"duration": basetypes.Int64Type{},
		"track_by": basetypes.StringType{},
	}
}

// AttrType returns the attribute type for a list of VulnerabilityProtectionProfilesThreatExceptionInnerActionBlockIp objects.
func (o VulnerabilityProtectionProfilesThreatExceptionInnerActionBlockIp) AttrType() attr.Type {
	return basetypes.ObjectType{
		AttrTypes: o.AttrTypes(),
	}
}

// AttrTypes defines the attribute types for the VulnerabilityProtectionProfilesThreatExceptionInnerExemptIpInner model.
func (o VulnerabilityProtectionProfilesThreatExceptionInnerExemptIpInner) AttrTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"name": basetypes.StringType{},
	}
}

// AttrType returns the attribute type for a list of VulnerabilityProtectionProfilesThreatExceptionInnerExemptIpInner objects.
func (o VulnerabilityProtectionProfilesThreatExceptionInnerExemptIpInner) AttrType() attr.Type {
	return basetypes.ObjectType{
		AttrTypes: o.AttrTypes(),
	}
}

// AttrTypes defines the attribute types for the VulnerabilityProtectionProfilesThreatExceptionInnerTimeAttribute model.
func (o VulnerabilityProtectionProfilesThreatExceptionInnerTimeAttribute) AttrTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"interval":  basetypes.Int64Type{},
		"threshold": basetypes.Int64Type{},
		"track_by":  basetypes.StringType{},
	}
}

// AttrType returns the attribute type for a list of VulnerabilityProtectionProfilesThreatExceptionInnerTimeAttribute objects.
func (o VulnerabilityProtectionProfilesThreatExceptionInnerTimeAttribute) AttrType() attr.Type {
	return basetypes.ObjectType{
		AttrTypes: o.AttrTypes(),
	}
}

// VulnerabilityProtectionProfilesResourceSchema defines the schema for VulnerabilityProtectionProfiles resource
var VulnerabilityProtectionProfilesResourceSchema = schema.Schema{
	MarkdownDescription: "VulnerabilityProtectionProfile resource",
	Attributes: map[string]schema.Attribute{
		"description": schema.StringAttribute{
			MarkdownDescription: "Description",
			Optional:            true,
		},
		"device": schema.StringAttribute{
			Validators: []validator.String{
				stringvalidator.ExactlyOneOf(
					path.MatchRelative().AtParent().AtName("folder"),
					path.MatchRelative().AtParent().AtName("snippet"),
				),
				stringvalidator.LengthAtMost(64),
				stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z\\d\\-_\\. ]+$"), "pattern must match "+"^[a-zA-Z\\d\\-_\\. ]+$"),
			},
			MarkdownDescription: "The device in which the resource is defined",
			Optional:            true,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},
		"folder": schema.StringAttribute{
			Validators: []validator.String{
				stringvalidator.ExactlyOneOf(
					path.MatchRelative().AtParent().AtName("device"),
					path.MatchRelative().AtParent().AtName("snippet"),
				),
				stringvalidator.LengthAtMost(64),
				stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z\\d\\-_\\. ]+$"), "pattern must match "+"^[a-zA-Z\\d\\-_\\. ]+$"),
			},
			MarkdownDescription: "The folder in which the resource is defined",
			Optional:            true,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},
		"id": schema.StringAttribute{
			MarkdownDescription: "UUID of the resource",
			Computed:            true,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.UseStateForUnknown(),
			},
		},
		"name": schema.StringAttribute{
			Validators: []validator.String{
				stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z0-9._-]+$"), "pattern must match "+"^[a-zA-Z0-9._-]+$"),
			},
			MarkdownDescription: "Name",
			Required:            true,
		},
		"rules": schema.ListNestedAttribute{
			MarkdownDescription: "Rules",
			Optional:            true,
			NestedObject: schema.NestedAttributeObject{
				Attributes: map[string]schema.Attribute{
					"action": schema.SingleNestedAttribute{
						MarkdownDescription: "vulnerability profiles threat exception default action",
						Optional:            true,
						Attributes: map[string]schema.Attribute{
							"alert": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Alert",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"allow": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Allow",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"block_ip": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "vulnerability protection block ip",
								Optional:            true,
								Attributes: map[string]schema.Attribute{
									"duration": schema.Int64Attribute{
										Validators: []validator.Int64{
											int64validator.Between(1, 3600),
										},
										MarkdownDescription: "Duration",
										Optional:            true,
									},
									"track_by": schema.StringAttribute{
										Validators: []validator.String{
											stringvalidator.OneOf("source-and-destination", "source"),
										},
										MarkdownDescription: "Track by",
										Optional:            true,
									},
								},
							},
							"default": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Default",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"drop": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Drop",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"reset_both": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Reset both",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"reset_client": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Reset client",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"reset_server": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
									),
								},
								MarkdownDescription: "Reset server",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
						},
					},
					"category": schema.StringAttribute{
						Validators: []validator.String{
							stringvalidator.OneOf("any", "brute-force", "code-execution", "code-obfuscation", "command-execution", "dos", "exploit-kit", "info-leak", "insecure-credentials", "overflow", "phishing", "protocol-anomaly", "scan", "sql-injection"),
						},
						MarkdownDescription: "Category",
						Optional:            true,
					},
					"cve": schema.ListAttribute{
						ElementType:         types.StringType,
						MarkdownDescription: "Cve",
						Optional:            true,
					},
					"host": schema.StringAttribute{
						MarkdownDescription: "Host",
						Optional:            true,
					},
					"name": schema.StringAttribute{
						MarkdownDescription: "Name",
						Optional:            true,
					},
					"packet_capture": schema.StringAttribute{
						Validators: []validator.String{
							stringvalidator.OneOf("disable", "single-packet", "extended-capture"),
						},
						MarkdownDescription: "Packet capture",
						Optional:            true,
					},
					"severity": schema.ListAttribute{
						ElementType:         types.StringType,
						MarkdownDescription: "Severity",
						Optional:            true,
					},
					"threat_name": schema.StringAttribute{
						MarkdownDescription: "Threat name",
						Optional:            true,
					},
					"vendor_id": schema.ListAttribute{
						ElementType:         types.StringType,
						MarkdownDescription: "Vendor id",
						Optional:            true,
					},
				},
			},
		},
		"snippet": schema.StringAttribute{
			Validators: []validator.String{
				stringvalidator.ExactlyOneOf(
					path.MatchRelative().AtParent().AtName("device"),
					path.MatchRelative().AtParent().AtName("folder"),
				),
				stringvalidator.LengthAtMost(64),
				stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z\\d\\-_\\. ]+$"), "pattern must match "+"^[a-zA-Z\\d\\-_\\. ]+$"),
			},
			MarkdownDescription: "The snippet in which the resource is defined",
			Optional:            true,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},
		"tfid": schema.StringAttribute{
			MarkdownDescription: "The Terraform ID.",
			Computed:            true,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.UseStateForUnknown(),
			},
		},
		"threat_exception": schema.ListNestedAttribute{
			MarkdownDescription: "Threat exception",
			Optional:            true,
			NestedObject: schema.NestedAttributeObject{
				Attributes: map[string]schema.Attribute{
					"action": schema.SingleNestedAttribute{
						MarkdownDescription: "vulnerability threat exception default action",
						Optional:            true,
						Attributes: map[string]schema.Attribute{
							"alert": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Alert",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"allow": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Allow",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"block_ip": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "vulnerability protection threat exception block ip",
								Optional:            true,
								Attributes: map[string]schema.Attribute{
									"duration": schema.Int64Attribute{
										Validators: []validator.Int64{
											int64validator.Between(1, 3600),
										},
										MarkdownDescription: "Duration",
										Optional:            true,
									},
									"track_by": schema.StringAttribute{
										Validators: []validator.String{
											stringvalidator.OneOf("source-and-destination", "source"),
										},
										MarkdownDescription: "Track by",
										Optional:            true,
									},
								},
							},
							"default": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Default",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"drop": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Drop",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"reset_both": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_client"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Reset both",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"reset_client": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_server"),
									),
								},
								MarkdownDescription: "Reset client",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
							"reset_server": schema.SingleNestedAttribute{
								Validators: []validator.Object{
									objectvalidator.ConflictsWith(
										path.MatchRelative().AtParent().AtName("alert"),
										path.MatchRelative().AtParent().AtName("allow"),
										path.MatchRelative().AtParent().AtName("block_ip"),
										path.MatchRelative().AtParent().AtName("default"),
										path.MatchRelative().AtParent().AtName("drop"),
										path.MatchRelative().AtParent().AtName("reset_both"),
										path.MatchRelative().AtParent().AtName("reset_client"),
									),
								},
								MarkdownDescription: "Reset server",
								Optional:            true,
								Attributes:          map[string]schema.Attribute{},
							},
						},
					},
					"exempt_ip": schema.ListNestedAttribute{
						MarkdownDescription: "Exempt ip",
						Optional:            true,
						NestedObject: schema.NestedAttributeObject{
							Attributes: map[string]schema.Attribute{
								"name": schema.StringAttribute{
									MarkdownDescription: "Name",
									Required:            true,
								},
							},
						},
					},
					"name": schema.StringAttribute{
						MarkdownDescription: "Name",
						Optional:            true,
					},
					"notes": schema.StringAttribute{
						MarkdownDescription: "Notes",
						Optional:            true,
					},
					"packet_capture": schema.StringAttribute{
						Validators: []validator.String{
							stringvalidator.OneOf("disable", "single-packet", "extended-capture"),
						},
						MarkdownDescription: "Packet capture",
						Optional:            true,
					},
					"time_attribute": schema.SingleNestedAttribute{
						MarkdownDescription: "vulnerability time attribute",
						Optional:            true,
						Attributes: map[string]schema.Attribute{
							"interval": schema.Int64Attribute{
								Validators: []validator.Int64{
									int64validator.Between(1, 3600),
								},
								MarkdownDescription: "Interval",
								Optional:            true,
							},
							"threshold": schema.Int64Attribute{
								Validators: []validator.Int64{
									int64validator.Between(1, 65535),
								},
								MarkdownDescription: "Threshold",
								Optional:            true,
							},
							"track_by": schema.StringAttribute{
								Validators: []validator.String{
									stringvalidator.OneOf("source", "destination", "source-and-destination"),
								},
								MarkdownDescription: "Track by",
								Optional:            true,
							},
						},
					},
				},
			},
		},
	},
}

// VulnerabilityProtectionProfilesDataSourceSchema defines the schema for VulnerabilityProtectionProfiles data source
var VulnerabilityProtectionProfilesDataSourceSchema = dsschema.Schema{
	MarkdownDescription: "VulnerabilityProtectionProfile data source",
	Attributes: map[string]dsschema.Attribute{
		"description": dsschema.StringAttribute{
			MarkdownDescription: "Description",
			Computed:            true,
		},
		"device": dsschema.StringAttribute{
			MarkdownDescription: "The device in which the resource is defined",
			Computed:            true,
		},
		"folder": dsschema.StringAttribute{
			MarkdownDescription: "The folder in which the resource is defined",
			Computed:            true,
		},
		"id": dsschema.StringAttribute{
			MarkdownDescription: "UUID of the resource",
			Required:            true,
		},
		"name": dsschema.StringAttribute{
			MarkdownDescription: "Name",
			Optional:            true,
			Computed:            true,
		},
		"rules": dsschema.ListNestedAttribute{
			MarkdownDescription: "Rules",
			Computed:            true,
			NestedObject: dsschema.NestedAttributeObject{
				Attributes: map[string]dsschema.Attribute{
					"action": dsschema.SingleNestedAttribute{
						MarkdownDescription: "vulnerability profiles threat exception default action",
						Computed:            true,
						Attributes: map[string]dsschema.Attribute{
							"alert": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Alert",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"allow": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Allow",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"block_ip": dsschema.SingleNestedAttribute{
								MarkdownDescription: "vulnerability protection block ip",
								Computed:            true,
								Attributes: map[string]dsschema.Attribute{
									"duration": dsschema.Int64Attribute{
										MarkdownDescription: "Duration",
										Computed:            true,
									},
									"track_by": dsschema.StringAttribute{
										MarkdownDescription: "Track by",
										Computed:            true,
									},
								},
							},
							"default": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Default",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"drop": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Drop",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"reset_both": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Reset both",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"reset_client": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Reset client",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"reset_server": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Reset server",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
						},
					},
					"category": dsschema.StringAttribute{
						MarkdownDescription: "Category",
						Computed:            true,
					},
					"cve": dsschema.ListAttribute{
						ElementType:         types.StringType,
						MarkdownDescription: "Cve",
						Computed:            true,
					},
					"host": dsschema.StringAttribute{
						MarkdownDescription: "Host",
						Computed:            true,
					},
					"name": dsschema.StringAttribute{
						MarkdownDescription: "Name",
						Computed:            true,
					},
					"packet_capture": dsschema.StringAttribute{
						MarkdownDescription: "Packet capture",
						Computed:            true,
					},
					"severity": dsschema.ListAttribute{
						ElementType:         types.StringType,
						MarkdownDescription: "Severity",
						Computed:            true,
					},
					"threat_name": dsschema.StringAttribute{
						MarkdownDescription: "Threat name",
						Computed:            true,
					},
					"vendor_id": dsschema.ListAttribute{
						ElementType:         types.StringType,
						MarkdownDescription: "Vendor id",
						Computed:            true,
					},
				},
			},
		},
		"snippet": dsschema.StringAttribute{
			MarkdownDescription: "The snippet in which the resource is defined",
			Computed:            true,
		},
		"tfid": dsschema.StringAttribute{
			MarkdownDescription: "The Terraform ID.",
			Computed:            true,
		},
		"threat_exception": dsschema.ListNestedAttribute{
			MarkdownDescription: "Threat exception",
			Computed:            true,
			NestedObject: dsschema.NestedAttributeObject{
				Attributes: map[string]dsschema.Attribute{
					"action": dsschema.SingleNestedAttribute{
						MarkdownDescription: "vulnerability threat exception default action",
						Computed:            true,
						Attributes: map[string]dsschema.Attribute{
							"alert": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Alert",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"allow": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Allow",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"block_ip": dsschema.SingleNestedAttribute{
								MarkdownDescription: "vulnerability protection threat exception block ip",
								Computed:            true,
								Attributes: map[string]dsschema.Attribute{
									"duration": dsschema.Int64Attribute{
										MarkdownDescription: "Duration",
										Computed:            true,
									},
									"track_by": dsschema.StringAttribute{
										MarkdownDescription: "Track by",
										Computed:            true,
									},
								},
							},
							"default": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Default",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"drop": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Drop",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"reset_both": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Reset both",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"reset_client": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Reset client",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
							"reset_server": dsschema.SingleNestedAttribute{
								MarkdownDescription: "Reset server",
								Computed:            true,
								Attributes:          map[string]dsschema.Attribute{},
							},
						},
					},
					"exempt_ip": dsschema.ListNestedAttribute{
						MarkdownDescription: "Exempt ip",
						Computed:            true,
						NestedObject: dsschema.NestedAttributeObject{
							Attributes: map[string]dsschema.Attribute{
								"name": dsschema.StringAttribute{
									MarkdownDescription: "Name",
									Computed:            true,
								},
							},
						},
					},
					"name": dsschema.StringAttribute{
						MarkdownDescription: "Name",
						Computed:            true,
					},
					"notes": dsschema.StringAttribute{
						MarkdownDescription: "Notes",
						Computed:            true,
					},
					"packet_capture": dsschema.StringAttribute{
						MarkdownDescription: "Packet capture",
						Computed:            true,
					},
					"time_attribute": dsschema.SingleNestedAttribute{
						MarkdownDescription: "vulnerability time attribute",
						Computed:            true,
						Attributes: map[string]dsschema.Attribute{
							"interval": dsschema.Int64Attribute{
								MarkdownDescription: "Interval",
								Computed:            true,
							},
							"threshold": dsschema.Int64Attribute{
								MarkdownDescription: "Threshold",
								Computed:            true,
							},
							"track_by": dsschema.StringAttribute{
								MarkdownDescription: "Track by",
								Computed:            true,
							},
						},
					},
				},
			},
		},
	},
}

// VulnerabilityProtectionProfilesListModel represents the data model for a list data source.
type VulnerabilityProtectionProfilesListModel struct {
	Tfid    types.String                      `tfsdk:"tfid"`
	Data    []VulnerabilityProtectionProfiles `tfsdk:"data"`
	Limit   types.Int64                       `tfsdk:"limit"`
	Offset  types.Int64                       `tfsdk:"offset"`
	Name    types.String                      `tfsdk:"name"`
	Total   types.Int64                       `tfsdk:"total"`
	Folder  types.String                      `tfsdk:"folder"`
	Snippet types.String                      `tfsdk:"snippet"`
	Device  types.String                      `tfsdk:"device"`
}

// VulnerabilityProtectionProfilesListDataSourceSchema defines the schema for a list data source.
var VulnerabilityProtectionProfilesListDataSourceSchema = dsschema.Schema{
	MarkdownDescription: "Retrieves a listing of config items.",
	Attributes: map[string]dsschema.Attribute{
		"tfid": dsschema.StringAttribute{Description: "The Terraform ID.", Computed: true},
		"data": dsschema.ListNestedAttribute{
			Description: "The data.",
			Computed:    true,
			NestedObject: dsschema.NestedAttributeObject{
				Attributes: VulnerabilityProtectionProfilesDataSourceSchema.Attributes,
			},
		},
		"limit":   dsschema.Int64Attribute{Description: "The max number of items to return. Default: 200.", Optional: true},
		"offset":  dsschema.Int64Attribute{Description: "The offset of the first item to return.", Optional: true},
		"name":    dsschema.StringAttribute{Description: "The name of the item.", Optional: true},
		"total":   dsschema.Int64Attribute{Description: "The total number of items.", Computed: true},
		"folder":  dsschema.StringAttribute{Description: "The folder of the item. Default: Shared.", Optional: true},
		"snippet": dsschema.StringAttribute{Description: "The snippet of the item.", Optional: true},
		"device":  dsschema.StringAttribute{Description: "The device of the item.", Optional: true},
	},
}
